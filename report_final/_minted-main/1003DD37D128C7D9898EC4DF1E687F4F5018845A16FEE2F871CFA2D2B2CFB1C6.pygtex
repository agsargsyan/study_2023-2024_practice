\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{reno} \PYG{k+kn}{import} \PYG{o}{*}
\PYG{k+kn}{import} \PYG{n+nn}{time}

\PYG{k}{class} \PYG{n+nc}{ACK\PYGZus{}Division\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{TCP\PYGZus{}Client}\PYG{p}{):}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{num}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{):}
        \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}receiver\PYGZsq{}}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}division} \PYG{o}{=} \PYG{n}{num}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}attacker} \PYG{o}{=} \PYG{k+kc}{True}

    \PYG{k}{def} \PYG{n+nf}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{):}
        \PYG{k}{if} \PYG{n}{pkt}\PYG{p}{[}\PYG{n}{scp}\PYG{o}{.}\PYG{n}{TCP}\PYG{p}{]}\PYG{o}{.}\PYG{n}{seq} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{:}
            \PYG{n}{new\PYGZus{}seq} \PYG{o}{=} \PYG{n}{pkt}\PYG{p}{[}\PYG{n}{scp}\PYG{o}{.}\PYG{n}{TCP}\PYG{p}{]}\PYG{o}{.}\PYG{n}{seq}
            \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{            If the sender includes a NONCE header, the payload increases by}
\PYG{l+s+sd}{            8 bytes. We ignore the NONCE header by capping payload\PYGZus{}len to}
\PYG{l+s+sd}{            MSS.}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{n}{payload\PYGZus{}len} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{MSS}\PYG{p}{,} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{pkt}\PYG{p}{[}\PYG{n}{scp}\PYG{o}{.}\PYG{n}{TCP}\PYG{p}{]}\PYG{o}{.}\PYG{n}{payload}\PYG{p}{))}
            \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{=} \PYG{n}{new\PYGZus{}seq}
            \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n}{xrange}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}division}\PYG{p}{):}
                \PYG{k}{if} \PYG{n}{i} \PYG{o}{==} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}division} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{:}
                    \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{=} \PYG{n}{new\PYGZus{}seq} \PYG{o}{+} \PYG{n}{payload\PYGZus{}len}
                \PYG{k}{else}\PYG{p}{:}
                    \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{=} \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{+} \PYG{n}{payload\PYGZus{}len} \PYG{o}{/} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}division}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{send\PYGZus{}ack}\PYG{p}{(}\PYG{n}{cur\PYGZus{}ack\PYGZus{}no}\PYG{p}{)}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{)}

\PYG{k}{class} \PYG{n+nc}{DupACK\PYGZus{}Spoofing\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{TCP\PYGZus{}Client}\PYG{p}{):}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{num}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{):}
        \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}receiver\PYGZsq{}}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}dupacks} \PYG{o}{=} \PYG{n}{num}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}attacker} \PYG{o}{=} \PYG{k+kc}{True}

    \PYG{k}{def} \PYG{n+nf}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{):}
        \PYG{k}{if} \PYG{n}{pkt}\PYG{p}{[}\PYG{n}{scp}\PYG{o}{.}\PYG{n}{TCP}\PYG{p}{]}\PYG{o}{.}\PYG{n}{seq} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{:}
            \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n}{xrange}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}dupacks}\PYG{p}{):}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{send\PYGZus{}ack}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{ack}\PYG{p}{)}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{)}

\PYG{k}{class} \PYG{n+nc}{Optimistic\PYGZus{}ACKing\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{TCP\PYGZus{}Client}\PYG{p}{):}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{num}\PYG{p}{,} \PYG{n}{interval}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{):}
        \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}receiver\PYGZsq{}}\PYG{p}{,} \PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}optacks} \PYG{o}{=} \PYG{n}{num}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{ack\PYGZus{}interval} \PYG{o}{=} \PYG{n}{interval}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{log\PYGZus{}attacker} \PYG{o}{=} \PYG{k+kc}{True}

    \PYG{k}{def} \PYG{n+nf}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{):}
        \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{=} \PYG{l+m+mi}{1}
        \PYG{k}{if} \PYG{n}{pkt}\PYG{p}{[}\PYG{n}{scp}\PYG{o}{.}\PYG{n}{TCP}\PYG{p}{]}\PYG{o}{.}\PYG{n}{seq} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{:}
            \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n}{xrange}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{num\PYGZus{}optacks}\PYG{p}{):}
                \PYG{n}{cur\PYGZus{}ack\PYGZus{}no} \PYG{o}{+=} \PYG{n}{MSS}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{send\PYGZus{}ack}\PYG{p}{(}\PYG{n}{cur\PYGZus{}ack\PYGZus{}no}\PYG{p}{)}
                \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{ack\PYGZus{}interval} \PYG{o}{/} \PYG{l+m+mf}{1000.}\PYG{p}{)}
        \PYG{k}{else}\PYG{p}{:}
            \PYG{n}{TCP\PYGZus{}Client}\PYG{o}{.}\PYG{n}{post\PYGZus{}receive}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{pkt}\PYG{p}{,} \PYG{n}{status}\PYG{p}{)}


\PYG{k}{def} \PYG{n+nf}{check\PYGZus{}attack\PYGZus{}type}\PYG{p}{(}\PYG{n}{val}\PYG{p}{):}
    \PYG{k}{if} \PYG{n}{val} \PYG{o+ow}{not} \PYG{o+ow}{in} \PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}div\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}dup\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}opt\PYGZsq{}}\PYG{p}{]:}
        \PYG{k}{raise} \PYG{n}{argparse}\PYG{o}{.}\PYG{n}{ArgumentTypeError}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}}\PYG{l+s+si}{\PYGZpc{}s}\PYG{l+s+s2}{ is an invalid attack name.\PYGZdq{}} \PYG{o}{\PYGZpc{}} \PYG{n}{val}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{val}

\PYG{k}{def} \PYG{n+nf}{parse\PYGZus{}args}\PYG{p}{():}
    \PYG{n}{parser} \PYG{o}{=} \PYG{n}{argparse}\PYG{o}{.}\PYG{n}{ArgumentParser}\PYG{p}{(}\PYG{n}{description}\PYG{o}{=} \PYGZbs{}
            \PYG{l+s+s2}{\PYGZdq{}TCP malicious receiver (attack implementations).\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}host\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}host\PYGZsq{}}\PYG{p}{,}
                        \PYG{n}{required}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Mininet host (`h1` or `h2`)\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}attack\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}attack\PYGZsq{}}\PYG{p}{,} \PYG{n}{required}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{,}
        \PYG{n+nb}{type}\PYG{o}{=}\PYG{n}{check\PYGZus{}attack\PYGZus{}type}\PYG{p}{,}
        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}The receiver attack to implement (`div`, `dup`, or `opt`).\PYGZdq{}}\PYG{p}{)}

    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}num\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}num\PYGZsq{}}\PYG{p}{,} \PYG{n}{required}\PYG{o}{=}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,}
        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}The number of spoofed ACKs the attacker sends on receiving the }\PYG{l+s+se}{\PYGZbs{}}
\PYG{l+s+s2}{                first data segment\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}interval\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}interval\PYGZsq{}}\PYG{p}{,} \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,}
        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Time interval between sending optimistic ACKs (in milliseconds).\PYGZdq{}}\PYG{p}{)}

    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}\PYGZhy{}\PYGZhy{}verbose\PYGZdq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}verbose\PYGZsq{}}\PYG{p}{,} \PYG{n}{action}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}store\PYGZus{}true\PYGZsq{}}\PYG{p}{,}
        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Verbose flag for TCP communication log.\PYGZdq{}}\PYG{p}{)}

    \PYG{n}{args} \PYG{o}{=} \PYG{n}{parser}\PYG{o}{.}\PYG{n}{parse\PYGZus{}args}\PYG{p}{()}
    \PYG{k}{if} \PYG{n}{args}\PYG{o}{.}\PYG{n}{attack} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}opt\PYGZsq{}} \PYG{o+ow}{and} \PYG{n}{args}\PYG{o}{.}\PYG{n}{interval} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{n}{parser}\PYG{o}{.}\PYG{n}{error}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Optimistic ACKing attack requires \PYGZhy{}\PYGZhy{}interval.\PYGZsq{}}\PYG{p}{)}

    \PYG{k}{return} \PYG{n}{parser}\PYG{o}{.}\PYG{n}{parse\PYGZus{}args}\PYG{p}{()}

\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZdq{}}\PYG{p}{:}
    \PYG{n}{args} \PYG{o}{=} \PYG{n}{parse\PYGZus{}args}\PYG{p}{()}

    \PYG{n}{kwargs} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}verbose\PYGZsq{}}\PYG{p}{:} \PYG{n}{args}\PYG{o}{.}\PYG{n}{verbose}\PYG{p}{\PYGZcb{}}
    \PYG{k}{if} \PYG{n}{args}\PYG{o}{.}\PYG{n}{attack} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}div\PYGZsq{}}\PYG{p}{:}
        \PYG{n}{attacker} \PYG{o}{=} \PYG{n}{ACK\PYGZus{}Division\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{args}\PYG{o}{.}\PYG{n}{num}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{args}\PYG{o}{.}\PYG{n}{attack} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}dup\PYGZsq{}}\PYG{p}{:}
        \PYG{n}{attacker} \PYG{o}{=} \PYG{n}{DupACK\PYGZus{}Spoofing\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{args}\PYG{o}{.}\PYG{n}{num}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{args}\PYG{o}{.}\PYG{n}{attack} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}opt\PYGZsq{}}\PYG{p}{:}
        \PYG{n}{attacker} \PYG{o}{=} \PYG{n}{Optimistic\PYGZus{}ACKing\PYGZus{}Attacker}\PYG{p}{(}\PYG{n}{args}\PYG{o}{.}\PYG{n}{num}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{interval}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{host}\PYG{p}{,} \PYG{o}{**}\PYG{n}{kwargs}\PYG{p}{)}

    \PYG{n}{attacker}\PYG{o}{.}\PYG{n}{start}\PYG{p}{()}

\end{Verbatim}
