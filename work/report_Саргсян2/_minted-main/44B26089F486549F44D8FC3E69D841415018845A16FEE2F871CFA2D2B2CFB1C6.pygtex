\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{mn}
\PYG{k+kn}{import} \PYG{n+nn}{argparse}
\PYG{k+kn}{from} \PYG{n+nn}{mininet.net} \PYG{k+kn}{import} \PYG{n}{Mininet}
\PYG{k+kn}{from} \PYG{n+nn}{mininet.node} \PYG{k+kn}{import} \PYG{n}{CPULimitedHost}
\PYG{k+kn}{from} \PYG{n+nn}{mininet.link} \PYG{k+kn}{import} \PYG{n}{TCLink}
\PYG{k+kn}{from} \PYG{n+nn}{mininet.util} \PYG{k+kn}{import} \PYG{n}{dumpNodeConnections}
\PYG{k+kn}{import} \PYG{n+nn}{time}

\PYG{n}{OUTPUT\PYGZus{}DIR} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}./plots\PYGZsq{}}

\PYG{k}{def} \PYG{n+nf}{build\PYGZus{}parser}\PYG{p}{():}
    \PYG{n}{parser} \PYG{o}{=} \PYG{n}{argparse}\PYG{o}{.}\PYG{n}{ArgumentParser}\PYG{p}{(}\PYG{n}{description}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Attack plot generator\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}output\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}output\PYGZus{}dir\PYGZsq{}}\PYG{p}{,} \PYG{n}{default}\PYG{o}{=}\PYG{n}{OUTPUT\PYGZus{}DIR}\PYG{p}{,}
                        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Directory to store output plots.\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}delay\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}link\PYGZus{}delay\PYGZsq{}}\PYG{p}{,}
                        \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{default}\PYG{o}{=}\PYG{l+m+mi}{250}\PYG{p}{,}
                        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Link delay in ms (default is 250ms).\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}data\PYGZhy{}size\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}data\PYGZus{}size\PYGZsq{}}\PYG{p}{,}
                        \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{default}\PYG{o}{=}\PYG{l+m+mi}{60}\PYG{p}{,}
                        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Amount of data to be sent from sender side (in kB).\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}num\PYGZhy{}attack\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}num\PYGZus{}attack\PYGZsq{}}\PYG{p}{,}
                        \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{default}\PYG{o}{=}\PYG{l+m+mi}{50}\PYG{p}{,}
                        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Number of ACK packets to perform attacks.\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}opt\PYGZhy{}interval\PYGZsq{}}\PYG{p}{,} \PYG{n}{dest}\PYG{o}{=}\PYG{l+s+s1}{\PYGZsq{}opt\PYGZus{}interval\PYGZsq{}}\PYG{p}{,}
                        \PYG{n+nb}{type}\PYG{o}{=}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{default}\PYG{o}{=}\PYG{l+m+mi}{20}\PYG{p}{,}
                        \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Time interval between sending optimistic ACKs}\PYG{l+s+se}{\PYGZbs{}}
\PYG{l+s+s2}{                              in ms (used in Optimistic ACKing attack only).\PYGZdq{}}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{parser}

\PYG{k}{def} \PYG{n+nf}{main}\PYG{p}{():}
    \PYG{n}{parser} \PYG{o}{=} \PYG{n}{build\PYGZus{}parser}\PYG{p}{()}
    \PYG{n}{args} \PYG{o}{=} \PYG{n}{parser}\PYG{o}{.}\PYG{n}{parse\PYGZus{}args}\PYG{p}{()}

    \PYG{c+c1}{\PYGZsh{} Build topology}
    \PYG{n}{topo} \PYG{o}{=} \PYG{n}{mn}\PYG{o}{.}\PYG{n}{StandardTopo}\PYG{p}{(}\PYG{n}{args}\PYG{o}{.}\PYG{n}{link\PYGZus{}delay}\PYG{p}{)}
    \PYG{n}{net} \PYG{o}{=} \PYG{n}{Mininet}\PYG{p}{(}\PYG{n}{topo}\PYG{o}{=}\PYG{n}{topo}\PYG{p}{,} \PYG{n}{host}\PYG{o}{=}\PYG{n}{CPULimitedHost}\PYG{p}{,} \PYG{n}{link}\PYG{o}{=}\PYG{n}{TCLink}\PYG{p}{)}
    \PYG{n}{net}\PYG{o}{.}\PYG{n}{start}\PYG{p}{()}
    \PYG{c+c1}{\PYGZsh{} Dumps network topology}
    \PYG{n}{dumpNodeConnections}\PYG{p}{(}\PYG{n}{net}\PYG{o}{.}\PYG{n}{hosts}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} Performs a basic all pairs ping test to check connectivity}
    \PYG{n}{drop\PYGZus{}rate} \PYG{o}{=} \PYG{n}{net}\PYG{o}{.}\PYG{n}{pingAll}\PYG{p}{()}
    \PYG{k}{if} \PYG{n}{drop\PYGZus{}rate} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
        \PYG{n+nb}{print} \PYG{l+s+s1}{\PYGZsq{}Reachability test failed!! Please restart. \PYGZsq{}}
        \PYG{k}{return}

    \PYG{c+c1}{\PYGZsh{} Note: for the following TCP communication,}
    \PYG{c+c1}{\PYGZsh{}       always start the receiver side first!}
    \PYG{n}{data\PYGZus{}size}\PYG{p}{,} \PYG{n}{num\PYGZus{}attack} \PYG{o}{=} \PYG{n}{args}\PYG{o}{.}\PYG{n}{data\PYGZus{}size}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{num\PYGZus{}attack}
    \PYG{n}{opt\PYGZus{}interval}\PYG{p}{,} \PYG{n}{output\PYGZus{}dir} \PYG{o}{=} \PYG{n}{args}\PYG{o}{.}\PYG{n}{opt\PYGZus{}interval}\PYG{p}{,} \PYG{n}{args}\PYG{o}{.}\PYG{n}{output\PYGZus{}dir}
    \PYG{n}{h1} \PYG{o}{=} \PYG{n}{net}\PYG{o}{.}\PYG{n}{get}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}h1\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{h2} \PYG{o}{=} \PYG{n}{net}\PYG{o}{.}\PYG{n}{get}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}h2\PYGZsq{}}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} RTT = 4 * link\PYGZus{}delay}
    \PYG{n}{rtt} \PYG{o}{=} \PYG{l+m+mi}{4} \PYG{o}{*} \PYG{n}{args}\PYG{o}{.}\PYG{n}{link\PYGZus{}delay}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Round\PYGZhy{}trip delay is }\PYG{l+s+si}{\PYGZpc{}.1f}\PYG{l+s+s1}{ secs.\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{rtt} \PYG{o}{/} \PYG{l+m+mf}{1000.}\PYG{p}{))}

    \PYG{c+c1}{\PYGZsh{} sleep 2s to clean up packets in the network}
    \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mf}{2.}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} First, record a normal TCP communication}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Starting normal TCP connection...\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{start\PYGZus{}time} \PYG{o}{=} \PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python reno.py \PYGZhy{}\PYGZhy{}role receiver \PYGZhy{}\PYGZhy{}host h2\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python reno.py \PYGZhy{}\PYGZhy{}role sender \PYGZhy{}\PYGZhy{}host h1 \PYGZhy{}\PYGZhy{}rtt }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{ \PYGZhy{}\PYGZhy{}limit }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}}\PYGZbs{}
                \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{rtt}\PYG{p}{,} \PYG{n}{data\PYGZus{}size}\PYG{p}{))}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Normal TCP connection done! (}\PYG{l+s+si}{\PYGZpc{}.2f}\PYG{l+s+s1}{ sec)\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{start\PYGZus{}time}\PYG{p}{))}

    \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mf}{2.}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} ACK Division attack plot}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Starting ACK Division attack...\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{start\PYGZus{}time} \PYG{o}{=} \PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python attacker.py \PYGZhy{}\PYGZhy{}host h2 \PYGZhy{}\PYGZhy{}attack div \PYGZhy{}\PYGZhy{}num }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{n}{num\PYGZus{}attack}\PYG{p}{)}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python reno.py \PYGZhy{}\PYGZhy{}role sender \PYGZhy{}\PYGZhy{}host h1 \PYGZhy{}\PYGZhy{}rtt }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{ \PYGZhy{}\PYGZhy{}limit }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}}\PYGZbs{}
                \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{rtt}\PYG{p}{,} \PYG{n}{data\PYGZus{}size}\PYG{p}{))}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{cmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}mv attack\PYGZus{}log.txt div\PYGZus{}attack\PYGZus{}log.txt\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}ACK Division attack done! (}\PYG{l+s+si}{\PYGZpc{}.2f}\PYG{l+s+s1}{ sec)\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{start\PYGZus{}time}\PYG{p}{))}

    \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mf}{2.}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} DupACK Spoofing attack plot}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Starting DupACK Spoofing attack...\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{start\PYGZus{}time} \PYG{o}{=} \PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python attacker.py \PYGZhy{}\PYGZhy{}host h2 \PYGZhy{}\PYGZhy{}attack dup \PYGZhy{}\PYGZhy{}num }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{n}{num\PYGZus{}attack}\PYG{p}{)}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python reno.py \PYGZhy{}\PYGZhy{}role sender \PYGZhy{}\PYGZhy{}host h1 \PYGZhy{}\PYGZhy{}rtt }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{ \PYGZhy{}\PYGZhy{}limit }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}}\PYGZbs{}
                \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{rtt}\PYG{p}{,} \PYG{n}{data\PYGZus{}size}\PYG{p}{))}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{cmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}mv attack\PYGZus{}log.txt dup\PYGZus{}attack\PYGZus{}log.txt\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}DupACK Spoofing attack done! (}\PYG{l+s+si}{\PYGZpc{}.2f}\PYG{l+s+s1}{ sec)\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{start\PYGZus{}time}\PYG{p}{))}

    \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mf}{2.}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Optimistic ACKing attack plot}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Starting Optimistic ACKing attack...\PYGZsq{}}\PYG{p}{)}
    \PYG{n}{start\PYGZus{}time} \PYG{o}{=} \PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python attacker.py \PYGZhy{}\PYGZhy{}host h2 \PYGZhy{}\PYGZhy{}attack opt \PYGZhy{}\PYGZhy{}num }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{ \PYGZhy{}\PYGZhy{}interval }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}}\PYGZbs{}
                \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{num\PYGZus{}attack}\PYG{p}{,} \PYG{n}{opt\PYGZus{}interval}\PYG{p}{))}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{sendCmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}python reno.py \PYGZhy{}\PYGZhy{}role sender \PYGZhy{}\PYGZhy{}host h1 \PYGZhy{}\PYGZhy{}rtt }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{ \PYGZhy{}\PYGZhy{}limit }\PYG{l+s+si}{\PYGZpc{}d}\PYG{l+s+s1}{\PYGZsq{}}\PYGZbs{}
                \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{rtt}\PYG{p}{,} \PYG{n}{data\PYGZus{}size}\PYG{p}{))}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h1}\PYG{o}{.}\PYG{n}{waitOutput}\PYG{p}{()}
    \PYG{n}{h2}\PYG{o}{.}\PYG{n}{cmd}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}mv attack\PYGZus{}log.txt opt\PYGZus{}attack\PYGZus{}log.txt\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Optimistic ACKing attack done! (}\PYG{l+s+si}{\PYGZpc{}.2f}\PYG{l+s+s1}{ sec)\PYGZsq{}} \PYG{o}{\PYGZpc{}} \PYG{p}{(}\PYG{n}{time}\PYG{o}{.}\PYG{n}{time}\PYG{p}{()} \PYG{o}{\PYGZhy{}} \PYG{n}{start\PYGZus{}time}\PYG{p}{))}

    \PYG{c+c1}{\PYGZsh{} Shutdown mininet}
    \PYG{n}{net}\PYG{o}{.}\PYG{n}{stop}\PYG{p}{()}

\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZdq{}}\PYG{p}{:}
    \PYG{n}{main}\PYG{p}{()}
\end{Verbatim}
